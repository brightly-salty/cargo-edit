[package]
authors = [
    "Without Boats <lee@libertad.ucsd.edu>",
    "Pascal Hertleif <killercup@gmail.com>",
    "Sebastian Garrido <sebasgarcep@gmail.com>",
    "Jonas Platte <mail@jonasplatte.de>",
    "Benjamin Gill <git@bgill.eu>",
    "Andronik Ordian <write@reusable.software>",
]
categories = [
    "development-tools",
    "development-tools::cargo-plugins",
]
description = "Cargo commands for modifying a `Cargo.toml` file.."
documentation = "https://github.com/killercup/cargo-edit/blob/master/README.md#available-subcommands"
homepage = "https://github.com/killercup/cargo-edit"
keywords = [
    "cargo",
    "cargo-subcommand",
    "cli",
    "dependencies",
    "crates",
]
license = "Apache-2.0 OR MIT"
name = "cargo-edit"
readme = "README.md"
repository = "https://github.com/killercup/cargo-edit"
version = "0.13.7"
edition = "2024"

[package.metadata.release]
pre-release-replacements = [
  {file="CHANGELOG.md", search="Unreleased", replace="{{version}}", min=1},
  {file="CHANGELOG.md", search="ReleaseDate", replace="{{date}}", min=1},
  {file="CHANGELOG.md", search="<!-- next-header -->", replace="<!-- next-header -->\n## Unreleased - ReleaseDate\n", exactly=1},
]

[[bin]]
name = "cargo-add"
path = "src/bin/add/main.rs"
required-features = ["add"]

[[bin]]
name = "cargo-rm"
path = "src/bin/rm/main.rs"
required-features = ["rm"]

[[bin]]
name = "cargo-upgrade"
path = "src/bin/upgrade/main.rs"
required-features = ["upgrade"]

[[bin]]
name = "cargo-set-version"
path = "src/bin/set-version/main.rs"
required-features = ["set-version"]

[dependencies]
concolor-control = { version = "0.0.7", default-features = false }
cargo_metadata = "0.21.0"
# Use this with default-features set to "true" (implicitly) so that reqwest,
# a transitive dependency, is compiled with support for both webpki
# certificates AND native certificates. We want support for both to be
# present, and then to let the user _select_ through configuration which
# one they want to be used.
tame-index = { version = "0.22.0", features = ["sparse", "native-certs", "local"] }
dunce = "1.0"
anyhow = "1.0"
home = "0.5.11"
serde = "1.0.217"
serde_derive = "1.0.217"
clap = { version = "4.5.27", features = ["derive", "wrap_help"], optional = true }
clap-cargo = "0.16.0"
termcolor = "1.4.1"
toml = "0.9.2"
toml_edit = "0.23.1"
indexmap = "2"
url = "2.5.4"
pathdiff = "0.2"
env_logger = "0.11.8"
clap-verbosity-flag = "3.0.2"
log = "0.4.27"

[dependencies.semver]
features = ["serde"]
version = "1.0.25"

[dev-dependencies]
trycmd = "0.15.8"
snapbox = { version = "0.6.21", features = ["cmd", "path"] }
cargo-test-macro = "0.4.3"
cargo-test-support = "0.7.4"

[profile.release]
panic = "abort"
codegen-units = 1
lto = true

[features]
default = [
    "add",
    "rm",
    "upgrade",
    "set-version",
]
add = ["cli"]
rm = ["cli"]
upgrade = ["cli"]
set-version = ["cli"]
cli = ["color", "clap"]
color = ["concolor-control/auto"]
test-external-apis = []

[lints.rust]
rust_2018_idioms = { level = "warn", priority = -1 }
unnameable_types = "warn"
unreachable_pub = "warn"
unsafe_op_in_unsafe_fn = "warn"
unused_lifetimes = "warn"
unused_macro_rules = "warn"
unused_qualifications = "warn"

[lints.clippy]
bool_assert_comparison = "allow"
branches_sharing_code = "allow"
checked_conversions = "warn"
collapsible_else_if = "allow"
create_dir = "warn"
dbg_macro = "warn"
debug_assert_with_mut_call = "warn"
doc_markdown = "warn"
empty_enum = "warn"
enum_glob_use = "warn"
expl_impl_clone_on_copy = "warn"
explicit_deref_methods = "warn"
explicit_into_iter_loop = "warn"
fallible_impl_from = "warn"
filter_map_next = "warn"
flat_map_option = "warn"
float_cmp_const = "warn"
fn_params_excessive_bools = "warn"
from_iter_instead_of_collect = "warn"
if_same_then_else = "allow"
implicit_clone = "warn"
imprecise_flops = "warn"
inconsistent_struct_constructor = "warn"
inefficient_to_string = "warn"
infinite_loop = "warn"
invalid_upcast_comparisons = "warn"
large_digit_groups = "warn"
large_stack_arrays = "warn"
large_types_passed_by_value = "warn"
let_and_return = "allow"  # sometimes good to name what you are returning
linkedlist = "warn"
lossy_float_literal = "warn"
macro_use_imports = "warn"
mem_forget = "warn"
mutex_integer = "warn"
needless_continue = "allow"
needless_for_each = "warn"
negative_feature_names = "warn"
path_buf_push_overwrite = "warn"
ptr_as_ptr = "warn"
rc_mutex = "warn"
redundant_feature_names = "warn"
ref_option_ref = "warn"
rest_pat_in_fully_bound_structs = "warn"
result_large_err = "allow"
same_functions_in_if_condition = "warn"
self_named_module_files = "allow"  # false positive
semicolon_if_nothing_returned = "warn"
str_to_string = "warn"
string_add = "warn"
string_add_assign = "warn"
string_lit_as_bytes = "warn"
string_to_string = "warn"
todo = "warn"
trait_duplication_in_bounds = "warn"
uninlined_format_args = "warn"
verbose_file_reads = "warn"
wildcard_imports = "warn"
zero_sized_map_values = "warn"
